
/*
 * PIR sensor tester
 */
 
int ledPin = 13;                // choose the pin for the LED
int inputPin = 2;               // choose the input pin (for PIR sensor)
int pirState = LOW;             // we start, assuming no motion detected
int val = 0;                    // variable for reading the pin status
 
void setup() {
  pinMode(ledPin, OUTPUT);      // declare LED as output
  pinMode(inputPin, INPUT);     // declare sensor as input
 
  Serial.begin(9600);
}
 
void loop(){
  val = digitalRead(inputPin);  // read input value
  if (val == HIGH) {            // check if the input is HIGH
    digitalWrite(ledPin, HIGH);  // turn LED ON
    if (pirState == LOW) {
      // we have just turned on
      Serial.println("Motion detected!");
      // We only want to print on the output change, not state
      pirState = HIGH;
    }
  } else {
    digitalWrite(ledPin, LOW); // turn LED OFF
    if (pirState == HIGH){
      // we have just turned of
      Serial.println("Motion ended!");
      // We only want to print on the output change, not state
      pirState = LOW;
    }
  }
}
--------------------------------------------------------------------------------------------------------------------------------
#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
#include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif

#define PIN        6
#define NUMPIXELS 12
#define ONSWITCH 4


Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);
bool switched_on = false;

void setup() {
  pinMode(ONSWITCH, INPUT_PULLUP);

  pixels.begin();
  button_press = millis();

}
void loop() {
  //read button "on" and flip the switched_on variable
  if (digitalRead(ONSWITCH) == LOW) {

    unsigned long buttonpress_start = millis();
    while (digitalRead(ONSWITCH) == LOW); //wait how long the button is pressed

    if (millis() - buttonpress_start > 250) { //Button pressed for longer than 250ms
      switched_on = !switched_on; //Invert switched_on
    }
  }

  if (switched_on == true) {

    for (int i = 0; i < NUMPIXELS; i++) {
      pixels.setPixelColor(i, pixels.Color(75, 0, 130));
      pixels.show();
    } else {

      pixels.clear();
    }

  }
